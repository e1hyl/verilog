$date
	Sat Feb 15 02:39:11 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module proc_tb $end
$var wire 5 ! rs2 [4:0] $end
$var wire 5 " rs1 [4:0] $end
$var wire 32 # PC [31:0] $end
$var wire 32 $ Instruction [31:0] $end
$var wire 32 % Immediate_result [31:0] $end
$var wire 32 & Data2 [31:0] $end
$var wire 32 ' Data1 [31:0] $end
$var wire 32 ( Alu_result [31:0] $end
$var reg 1 ) clk $end
$var reg 1 * rst $end
$scope module dut $end
$var wire 32 + Alu_result [31:0] $end
$var wire 32 , Data1 [31:0] $end
$var wire 32 - Data2 [31:0] $end
$var wire 32 . Immediate_result [31:0] $end
$var wire 32 / Instruction [31:0] $end
$var wire 32 0 PC [31:0] $end
$var wire 1 ) clk $end
$var wire 5 1 rs1 [4:0] $end
$var wire 5 2 rs2 [4:0] $end
$var wire 1 * rst $end
$var wire 1 3 regWrite $end
$var wire 32 4 pc_o [31:0] $end
$var wire 32 5 pc_i [31:0] $end
$var wire 7 6 opcode [6:0] $end
$var wire 32 7 mux_out [31:0] $end
$var wire 32 8 ins_out [31:0] $end
$var wire 32 9 imm_out [31:0] $end
$var wire 12 : imm [11:0] $end
$var wire 32 ; dataW [31:0] $end
$var wire 32 < dataMem_out [31:0] $end
$var wire 32 = data2 [31:0] $end
$var wire 32 > data1 [31:0] $end
$var wire 1 ? bSel $end
$var wire 32 @ alu_out [31:0] $end
$var wire 2 A aluSel [1:0] $end
$var wire 1 B WBSel $end
$var wire 5 C Rs2 [4:0] $end
$var wire 5 D Rs1 [4:0] $end
$var wire 5 E Rd [4:0] $end
$var wire 1 F MEMRW $end
$var wire 7 G Funct7 [6:0] $end
$var wire 3 H Funct3 [2:0] $end
$scope module a0 $end
$var wire 32 I b [31:0] $end
$var wire 32 J sum [31:0] $end
$var wire 32 K a [31:0] $end
$upscope $end
$scope module al0 $end
$var wire 32 L data2 [31:0] $end
$var wire 32 M data1 [31:0] $end
$var wire 2 N ALUSel [1:0] $end
$var reg 32 O result [31:0] $end
$upscope $end
$scope module c0 $end
$var wire 7 P opcode [6:0] $end
$var wire 32 Q instruction [31:0] $end
$var wire 7 R funct7 [6:0] $end
$var wire 3 S funct3 [2:0] $end
$var reg 2 T ALUSel [1:0] $end
$var reg 1 ? BSel $end
$var reg 1 F MEMRW $end
$var reg 1 3 RegWrite $end
$var reg 1 B WBSel $end
$upscope $end
$scope module d0 $end
$var wire 7 U opcode [6:0] $end
$var wire 32 V instruction [31:0] $end
$var wire 7 W OPCODE [6:0] $end
$var parameter 7 X arithmetic_i $end
$var parameter 7 Y arithmetic_r $end
$var reg 3 Z funct3 [2:0] $end
$var reg 7 [ funct7 [6:0] $end
$var reg 12 \ immediate [11:0] $end
$var reg 5 ] rd [4:0] $end
$var reg 5 ^ rs1 [4:0] $end
$var reg 5 _ rs2 [4:0] $end
$upscope $end
$scope module dm0 $end
$var wire 1 F MEMRW $end
$var wire 32 ` addr [31:0] $end
$var reg 32 a dataR [31:0] $end
$upscope $end
$scope module i0 $end
$var wire 1 * rst $end
$var wire 32 b instruction [31:0] $end
$var wire 32 c address [31:0] $end
$upscope $end
$scope module im0 $end
$var wire 32 d instruction [31:0] $end
$var wire 7 e opcode [6:0] $end
$var wire 12 f immediate_i [11:0] $end
$var parameter 7 g i_opcode1 $end
$var reg 32 h immediate [31:0] $end
$upscope $end
$scope module m0 $end
$var wire 32 i a [31:0] $end
$var wire 1 ? s $end
$var wire 32 j y [31:0] $end
$var wire 32 k b [31:0] $end
$upscope $end
$scope module m1 $end
$var wire 32 l a [31:0] $end
$var wire 32 m b [31:0] $end
$var wire 1 B s $end
$var wire 32 n y [31:0] $end
$upscope $end
$scope module p0 $end
$var wire 1 ) clk $end
$var wire 32 o pc_in [31:0] $end
$var wire 1 * rst $end
$var reg 32 p pc_out [31:0] $end
$upscope $end
$scope module r0 $end
$var wire 32 q ReadData1 [31:0] $end
$var wire 32 r ReadData2 [31:0] $end
$var wire 1 3 RegWrite $end
$var wire 32 s WriteData [31:0] $end
$var wire 1 ) clk $end
$var wire 5 t rd [4:0] $end
$var wire 5 u rs1 [4:0] $end
$var wire 5 v rs2 [4:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10011 g
b110011 Y
b10011 X
$end
#0
$dumpvars
b1 v
b10 u
b11 t
bx s
b101 r
b110 q
b0 p
b100 o
bx n
b1011 m
bx l
b101 k
b101 j
bx i
bx h
b1 f
b110011 e
b100010000000110110011 d
b0 c
b100010000000110110011 b
bx a
b1011 `
b1 _
b10 ^
b11 ]
bx \
b0 [
b0 Z
b110011 W
b100010000000110110011 V
b110011 U
b0 T
b0 S
b0 R
b100010000000110110011 Q
b110011 P
b1011 O
b0 N
b110 M
b101 L
b0 K
b100 J
b100 I
b0 H
b0 G
xF
b11 E
b10 D
b1 C
1B
b0 A
b1011 @
0?
b110 >
b101 =
bx <
bx ;
bx :
bx 9
b100010000000110110011 8
b101 7
b110011 6
b100 5
b0 4
13
b1 2
b10 1
b100 0
b100010000000110110011 /
bx .
b101 -
b110 ,
bx +
1*
1)
bx (
b110 '
b101 &
bx %
b100010000000110110011 $
b100 #
b10 "
b1 !
$end
#20000
0*
#30000
0)
#60000
b100000110100 :
b100000110100 \
b11111111111111111111100000110100 %
b11111111111111111111100000110100 .
b11111111111111111111100000110100 9
b11111111111111111111100000110100 h
b11111111111111111111100000110100 i
1?
b11111111111111111111100000110100 7
b11111111111111111111100000110100 L
b11111111111111111111100000110100 j
b11111111111111111111100000111001 @
b11111111111111111111100000111001 O
b11111111111111111111100000111001 `
b11111111111111111111100000111001 m
b10011 e
b10011 6
b10011 W
b10011 U
b10011 P
b100000110100 f
b1000001 R
bx G
bx [
bx &
bx -
bx =
bx k
bx r
bx !
bx 2
bx C
bx _
bx v
b101 '
b101 ,
b101 >
b101 M
b101 q
b1 "
b1 1
b1 D
b1 ^
b1 u
b100 E
b100 ]
b100 t
b10000011010000001000001000010011 $
b10000011010000001000001000010011 /
b10000011010000001000001000010011 8
b10000011010000001000001000010011 Q
b10000011010000001000001000010011 V
b10000011010000001000001000010011 b
b10000011010000001000001000010011 d
b1000 #
b1000 0
b1000 5
b1000 J
b1000 o
b100 4
b100 K
b100 c
b100 p
1)
#90000
0)
#120000
b0 G
b0 [
b0 &
b0 -
b0 =
b0 k
b0 r
b0 !
b0 2
b0 C
b0 _
b0 v
0?
03
b0 @
b0 O
b0 `
b0 m
b0 7
b0 L
b0 j
bx e
bx 6
bx W
bx U
bx P
bx S
bx f
bx R
b0 :
b0 \
b0 '
b0 ,
b0 >
b0 M
b0 q
b0 "
b0 1
b0 D
b0 ^
b0 u
b0 H
b0 Z
b0 E
b0 ]
b0 t
bx %
bx .
bx 9
bx h
bx i
bx $
bx /
bx 8
bx Q
bx V
bx b
bx d
b1100 #
b1100 0
b1100 5
b1100 J
b1100 o
b1000 4
b1000 K
b1000 c
b1000 p
1)
#150000
0)
#180000
b10000 #
b10000 0
b10000 5
b10000 J
b10000 o
b1100 4
b1100 K
b1100 c
b1100 p
1)
#210000
0)
#240000
b10100 #
b10100 0
b10100 5
b10100 J
b10100 o
b10000 4
b10000 K
b10000 c
b10000 p
1)
#270000
0)
#300000
b11000 #
b11000 0
b11000 5
b11000 J
b11000 o
b10100 4
b10100 K
b10100 c
b10100 p
1)
#330000
0)
#360000
bx @
bx O
bx `
bx m
bx (
bx +
bx ;
bx n
bx s
bx 7
bx L
bx j
0F
0B
1?
13
b11 e
b11 6
b11 W
b11 U
b11 P
b10 S
b1111101000 f
b11111 R
b111110100000010010010100000011 $
b111110100000010010010100000011 /
b111110100000010010010100000011 8
b111110100000010010010100000011 Q
b111110100000010010010100000011 V
b111110100000010010010100000011 b
b111110100000010010010100000011 d
b11100 #
b11100 0
b11100 5
b11100 J
b11100 o
b11000 4
b11000 K
b11000 c
b11000 p
1)
#390000
0)
#420000
0?
03
bx e
bx 6
bx W
bx U
bx P
bx S
bx f
bx R
bx $
bx /
bx 8
bx Q
bx V
bx b
bx d
b100000 #
b100000 0
b100000 5
b100000 J
b100000 o
b11100 4
b11100 K
b11100 c
b11100 p
bx '
bx ,
bx >
bx M
bx q
bx &
bx -
bx =
bx k
bx r
1)
#450000
0)
#480000
b100100 #
b100100 0
b100100 5
b100100 J
b100100 o
b100000 4
b100000 K
b100000 c
b100000 p
b0 (
b0 +
b0 ;
b0 n
b0 s
b0 @
b0 O
b0 `
b0 m
b0 7
b0 L
b0 j
b0 '
b0 ,
b0 >
b0 M
b0 q
b0 &
b0 -
b0 =
b0 k
b0 r
1)
#510000
0)
#540000
b101000 #
b101000 0
b101000 5
b101000 J
b101000 o
b100100 4
b100100 K
b100100 c
b100100 p
1)
#570000
0)
#600000
b101100 #
b101100 0
b101100 5
b101100 J
b101100 o
b101000 4
b101000 K
b101000 c
b101000 p
1)
#630000
0)
#660000
b110000 #
b110000 0
b110000 5
b110000 J
b110000 o
b101100 4
b101100 K
b101100 c
b101100 p
1)
#690000
0)
#720000
b110100 #
b110100 0
b110100 5
b110100 J
b110100 o
b110000 4
b110000 K
b110000 c
b110000 p
1)
#750000
0)
#780000
b111000 #
b111000 0
b111000 5
b111000 J
b111000 o
b110100 4
b110100 K
b110100 c
b110100 p
1)
#810000
0)
#840000
b111100 #
b111100 0
b111100 5
b111100 J
b111100 o
b111000 4
b111000 K
b111000 c
b111000 p
1)
#870000
0)
#900000
b1000000 #
b1000000 0
b1000000 5
b1000000 J
b1000000 o
b111100 4
b111100 K
b111100 c
b111100 p
1)
#930000
0)
#960000
b1000100 #
b1000100 0
b1000100 5
b1000100 J
b1000100 o
b1000000 4
b1000000 K
b1000000 c
b1000000 p
1)
#990000
0)
#1020000
b1001000 #
b1001000 0
b1001000 5
b1001000 J
b1001000 o
b1000100 4
b1000100 K
b1000100 c
b1000100 p
1)
